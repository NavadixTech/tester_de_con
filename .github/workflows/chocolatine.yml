name: chocolatine
run-name: ${{github.actor}} choco's check
on:
  push:
    branches-ignore:
      - " ga-ignore-"
  pull_request:
    branches-ignore:
      - " ga-ignore-"
env:
  MIRROR_URL: "git@github.com:EpitechPGEPromo2029/B-DOP-200-MLN-2-1-chocolatine-sacha.lamour.git"
  EXECUTABLES: "my_radar"
jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@master
        with:
          repository: ''

      - name: Run coding-style
        run: check.sh $(pwd) $(pwd)

      - name: Display Errors
        if: failure()
        run: cat coding-style-reports.log && exit 1

  check_program_compilation:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: check_coding_style
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@master
        with:
          repository: ''

      - name: Compile repository
        run: make

      - name: Clean repository
        run: make clean

      - name: Check file
        run: |
          for file in ${{ env.EXECUTABLES }};do
             if [ ! -x "$file" ]; then
              echo "File $file does not exist or is not executable"
              exit 1
            fi
          done

  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs:  check_program_compilation
    steps:

      - name: Checkout GH repository
        uses: actions/checkout@master
        with:
          repository: ''

      - name: Compile tests binaries
        run: make tests_run

  push_to_mirror:
    runs-on: ubuntu-latest
    needs:  run_tests
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.SSH_PRIVATE_KEY }}