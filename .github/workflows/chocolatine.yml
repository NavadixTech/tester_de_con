name: chocolatine
run-name: ${{github.action}} - ${{github.workflow}} - ${{github.ref}}

on:
  push:
    branches-ignore:
      - " ga-ignore-"
  pull_request:
    branches-ignore:
      - " ga-ignore-"

env:
  MIRROR_URL: "git@github.com:EpitechPGEPromo2029/B-DOP-200-MLN-2-1-chocolatine-sacha.lamour.git"
  EXECUTABLES: "my_radar"

jobs:
  check_coding_style:
    name: "Use coding_style_checker script to verify if the code is clean and report any coding-style errors"
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v4
      - id: check_coding_style
        run: |
          check.sh $(pwd) $(pwd)
          CODING_STYLE_ERRORS=$(cat $(pwd)/coding-style-reports.log)
          for ERRORS in $CODING_STYLE_ERRORS; do
            array=(`echo $ERRORS | sed 's/:/\n/g'`)
            echo "::error file=${array[1]#./},title=${array[3]#./} coding style errors detected: ${array[2]#./}::${array[4]#./}"
          done
          if [[ -n $CODING_STYLE_ERRORS ]]
          then
            exit 1
          else
            echo No coding style errors detected
          fi

  check_program_compilation:
    name: Check Compilation
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker
    needs: check_coding_style
    continue-on-error: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          repository: ''

      - name: Compile Project
        run: make

      - name: Clean Project
        run: make clean

      - name: Verify Executables
        run: |
          for file in ${{ env.EXECUTABLES }};do
             if [ ! -x "$file" ]; then
              echo "File $file does not exist or is not executable"
              exit 1
            fi
          done

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    continue-on-error: false
    container:
      image: epitechcontent/epitest-docker
    needs: check_program_compilation
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Tests
        run: timeout 120 make tests_run

  push_to_mirror:
    name: Push to Mirror
    runs-on: ubuntu-latest
    needs:  run_tests
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.SSH_PRIVATE_KEY }}